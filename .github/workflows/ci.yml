name: CI

on:
  merge_group: {}
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      plugins: ${{ steps.packages.outputs.paths }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtinth/setup-github-actions-caching-for-turbo@v1
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: yarn
      - run: yarn install
      - id: files
        uses: imhoffd/get-changed-files@v2
        with:
          format: json
      - id: packages
        uses: ./.github/actions/changed-packages
        with:
          files: ${{ steps.files.outputs.all }}
  validate:
    runs-on: macos-12
    timeout-minutes: 30
    needs:
      - setup
    steps:
      - uses: actions/checkout@v3
      - uses: dtinth/setup-github-actions-caching-for-turbo@v1
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: yarn
      - run: yarn install
      - run: yarn run validate
  verify-ios:
    runs-on: macos-12
    if: needs.setup.outputs.plugins != '[]'
    timeout-minutes: 30
    needs:
      - setup
      - validate
    strategy:
      matrix:
        xcode:
          - /Applications/Xcode_14.2.app
        plugin: ${{ fromJson(needs.setup.outputs.plugins) }}
    steps:
      - run: sudo xcode-select --switch ${{ matrix.xcode }}
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: yarn
      - run: yarn install
      - run: yarn run verify:ios
        working-directory: ${{ matrix.plugin }}
  verify-android:
    runs-on: ubuntu-latest
    if: needs.setup.outputs.plugins != '[]'
    timeout-minutes: 30
    needs:
      - setup
      - validate
    strategy:
      matrix:
        plugin: ${{ fromJson(needs.setup.outputs.plugins) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: yarn
      - run: yarn install
      - run: yarn run verify:android
        working-directory: ${{ matrix.plugin }}
  verify-web:
    runs-on: ubuntu-latest
    if: needs.setup.outputs.plugins != '[]'
    timeout-minutes: 30
    needs:
      - setup
      - validate
    strategy:
      matrix:
        plugin: ${{ fromJson(needs.setup.outputs.plugins) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: yarn
      - run: yarn install
      - run: yarn run verify:web
        working-directory: ${{ matrix.plugin }}
# deploy:
#   runs-on: macos-latest
#   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#   timeout-minutes: 30
#   needs:
#     - setup
#     - lint
#     - verify-ios
#     - verify-android
#     - verify-web
#   steps:
#     - uses: actions/setup-node@v3
#       with:
#         node-version: 18.x
#     - uses: actions/checkout@v2
#       with:
#         fetch-depth: 0
#     - name: Restore Dependency Cache
#       id: cache-modules
#       uses: actions/cache@v2
#       with:
#         path: |
#           node_modules
#           */node_modules
#         key: dependency-cache-${{ hashFiles('package.json', '*/package.json') }}
#     - run: npm install
#     - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
#     - run: npx lerna publish from-git --yes
